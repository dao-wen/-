<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 配置Mabatis映射文件 -->
<mapper namespace="com.dao.VedioDAO">
	<resultMap type="vedio" id="vedioMap">
		<id property="vedioid" column="vedioid" />
		<result property="usersid" column="usersid" />
		<result property="title" column="title" />
		<result property="image" column="image" />
		<result property="fileurl" column="fileurl" />
		<result property="contents" column="contents" />
		<result property="addtime" column="addtime" />
		<result property="hits" column="hits" />
		<result property="username" column="username" />
	</resultMap>
	<!-- 插入语句 DAO通过id调用此配置 -->
	<insert id="insertVedio" parameterType="vedio">
		insert into vedio(vedioid , usersid , title , image , fileurl , contents , addtime , hits ) values(#{vedioid} , #{usersid} , #{title} , #{image} , #{fileurl} ,
		#{contents} , #{addtime} , #{hits} )
	</insert>
	<!-- 更新语句 DAO通过id调用此配置 -->
	<update id="updateVedio" parameterType="vedio">
		update vedio set usersid=#{usersid} , title=#{title} , image=#{image} , fileurl=#{fileurl} , contents=#{contents} , addtime=#{addtime} , hits=#{hits} where
		vedioid=#{vedioid}
	</update>
	<!-- 按主键删除 DAO通过id调用此配置 -->
	<delete id="deleteVedio" parameterType="String">
		delete from vedio where vedioid = #{vedioid}
	</delete>
	<!-- 查询全部信息 DAO通过id调用此配置 -->
	<select id="getAllVedio" resultMap="vedioMap">
		select a.* , b.username from vedio a , users b where a.usersid = b.usersid order by vedioid desc
	</select>
	<select id="getFrontVedio" resultMap="vedioMap">
		select a.* , b.username from vedio a , users b where a.usersid = b.usersid order by vedioid desc limit 5
	</select>
	<!-- 按主键查询 DAO通过id调用此配置 -->
	<select id="getVedioById" parameterType="String" resultMap="vedioMap">
		select a.* , b.username from vedio a , users b where a.usersid = b.usersid and vedioid=#{vedioid} order by vedioid desc
	</select>
	<!-- 按条件精确查询 DAO通过id调用此配置 -->
	<select id="getVedioByCond" parameterType="vedio" resultMap="vedioMap">
		select a.* , b.username from vedio a , users b where a.usersid = b.usersid
		<if test="usersid != null and '' != usersid">
			and a.usersid = #{usersid}
		</if>
		<if test="title != null and '' != title">
			and a.title = #{title}
		</if>
		<if test="image != null and '' != image">
			and a.image = #{image}
		</if>
		<if test="fileurl != null and '' != fileurl">
			and a.fileurl = #{fileurl}
		</if>
		<if test="contents != null and '' != contents">
			and a.contents = #{contents}
		</if>
		<if test="addtime != null and '' != addtime">
			and a.addtime = #{addtime}
		</if>
		<if test="hits != null and '' != hits">
			and a.hits = #{hits}
		</if>
	</select>
	<!-- 按条件模糊查询 DAO通过id调用此配置 -->
	<select id="getVedioByLike" parameterType="vedio" resultMap="vedioMap">
		select a.* , b.username from vedio a , users b where a.usersid = b.usersid
		<if test="usersid != null and '' != usersid">
			and b.username like CONCAT('%', CONCAT(#{usersid}, '%'))
		</if>
		<if test="title != null and '' != title">
			and a.title like CONCAT('%', CONCAT(#{title}, '%'))
		</if>
		<if test="image != null and '' != image">
			and a.image like CONCAT('%', CONCAT(#{image}, '%'))
		</if>
		<if test="fileurl != null and '' != fileurl">
			and a.fileurl like CONCAT('%', CONCAT(#{fileurl}, '%'))
		</if>
		<if test="contents != null and '' != contents">
			and a.contents like CONCAT('%', CONCAT(#{contents}, '%'))
		</if>
		<if test="addtime != null and '' != addtime">
			and a.addtime like CONCAT('%', CONCAT(#{addtime}, '%'))
		</if>
		<if test="hits != null and '' != hits">
			and a.hits like CONCAT('%', CONCAT(#{hits}, '%'))
		</if>
	</select>
</mapper>





























